{
  "address": "0xb060E4824BA8A963bfb4d2d1Beaa121e92BC4f39",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agentAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExecutionReverted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IntervalNotReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidJobOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "enum ISafe.Operation",
              "name": "operation",
              "type": "uint8"
            }
          ],
          "internalType": "struct IPPAgentSafeModule.Tx",
          "name": "tx_",
          "type": "tuple"
        }
      ],
      "name": "exec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x544323b77e98d59e21a63d55b37cb076b281b8f667c186ff099565f0903fb06c",
  "receipt": {
    "to": null,
    "from": "0x8c081a7e2b018aBBa53d968E773e455DDc5cA808",
    "contractAddress": "0xb060E4824BA8A963bfb4d2d1Beaa121e92BC4f39",
    "transactionIndex": 0,
    "gasUsed": "737742",
    "logsBloom": "0x
    "blockHash": "0x7214d7c1f071757e76c820c37d201dd05732f86d4941032cc36fcf8b05af677c",
    "transactionHash": "0x544323b77e98d59e21a63d55b37cb076b281b8f667c186ff099565f0903fb06c",
    "logs": [],
    "blockNumber": 31505897,
    "cumulativeGasUsed": "737742",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x071412e301C2087A4DAA055CF4aFa2683cE1e499"
  ],
  "numDeployments": 1,
  "solcInputHash": "ce59aabc6f3d1c980299596397c45f6b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agentAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExecutionReverted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IntervalNotReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidJobOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"enum ISafe.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"internalType\":\"struct IPPAgentSafeModule.Tx\",\"name\":\"tx_\",\"type\":\"tuple\"}],\"name\":\"exec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"agentAddress\":\"Address of a PPAgent contract\"}},\"exec(address,(address,bytes,uint256,uint8))\":{\"params\":{\"safe\":\"Address of a Safe smart contract\",\"tx_\":\"Transaction to be executed\"}}},\"stateVariables\":{\"AgentContract\":{\"details\":\"Address of the PPAgent Contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PPSafeAgent.sol\":\"PPAgentSafeModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IPPAgentV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.12;\\n\\ninterface IPPAgentV2JobOwner {\\n    struct RegisterJobParams {\\n        address jobAddress;\\n        bytes4 jobSelector;\\n        bool useJobOwnerCredits;\\n        bool assertResolverSelector;\\n        uint16 maxBaseFeeGwei;\\n        uint16 rewardPct;\\n        uint32 fixedReward;\\n        uint256 jobMinCvp;\\n        uint8 calldataSource;\\n        uint24 intervalSeconds;\\n    }\\n\\n    struct Job {\\n        uint8 config;\\n        bytes4 selector;\\n        uint88 credits;\\n        uint16 maxBaseFeeGwei;\\n        uint16 rewardPct;\\n        uint32 fixedReward;\\n        uint8 calldataSource;\\n        // For interval jobs\\n        uint24 intervalSeconds;\\n        uint32 lastExecutionAt;\\n    }\\n\\n    struct Resolver {\\n        address resolverAddress;\\n        bytes resolverCalldata;\\n    }\\n\\n    function registerJob(\\n        RegisterJobParams calldata params_,\\n        Resolver calldata resolver_,\\n        bytes calldata preDefinedCalldata_\\n    ) external payable returns (bytes32 jobKey, uint256 jobId);\\n\\n    function getJobKey(\\n        address jobAddress_,\\n        uint256 jobId_\\n    ) external pure returns (bytes32 jobKey);\\n\\n    function getJobRaw(bytes32 jobKey_) external view returns (uint256 rawJob);\\n\\n    function jobNextKeeperId(bytes32 jobKey_) external view returns (uint256);\\n\\n    function getKeeper(\\n        uint256 keeperId_\\n    )\\n        external\\n        view\\n        returns (\\n            address admin,\\n            address worker,\\n            bool isActive,\\n            uint256 currentStake,\\n            uint256 slashedStake,\\n            uint256 compensation,\\n            uint256 pendingWithdrawalAmount,\\n            uint256 pendingWithdrawalEndAt\\n        );\\n\\n    function getJob(\\n        bytes32 jobKey_\\n    )\\n        external\\n        view\\n        returns (\\n            address owner,\\n            address pendingTransfer,\\n            uint256 jobLevelMinKeeperCvp,\\n            Job memory details,\\n            bytes memory preDefinedCalldata,\\n            Resolver memory resolver\\n        );\\n}\\n\",\"keccak256\":\"0x2dc324c4f437da7e07315c48cfd390465b59cac3cccb10efd799e1633177430a\",\"license\":\"MIT\"},\"contracts/IPPSafeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\nimport \\\"./ISafe.sol\\\";\\nimport {IPPAgentV2JobOwner} from \\\"./IPPAgentV2.sol\\\";\\n\\npragma solidity ^0.8.9;\\n\\ninterface IPPAgentSafeModule {\\n    struct Tx {\\n        address to;\\n        bytes data;\\n        uint256 value;\\n        ISafe.Operation operation;\\n    }\\n\\n    error ExecutionReverted();\\n    error InvalidJobOwner();\\n    error InvalidSender();\\n    error IntervalNotReached();\\n\\n    /**\\n     *\\n     * @param safe Address of a Safe smart contract\\n     * @param tx_ Transaction to be executed\\n     */\\n    function exec(address safe, Tx calldata tx_) external;\\n}\\n\",\"keccak256\":\"0x7cdc1c6cc945f4a2174cc41336f8c72eb6fab46c16406dc7cf75cccf96b4ac3b\",\"license\":\"UNLICENSED\"},\"contracts/ISafe.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.12;\\n\\ninterface ISafe {\\n    enum Operation {\\n        Call,\\n        DelegateCall\\n    }\\n\\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations and return data\\n    /// @param to Destination address of module transaction.\\n    /// @param value Ether value of module transaction.\\n    /// @param data Data payload of module transaction.\\n    /// @param operation Operation type of module transaction.\\n    function execTransactionFromModuleReturnData(\\n        address to,\\n        uint256 value,\\n        bytes memory data,\\n        Operation operation\\n    ) external returns (bool success, bytes memory returnData);\\n}\\n\",\"keccak256\":\"0x0e8e16fcd99c660bb6967fb3e9ae92829d21a3d9a49e5a2884e4e17a40482b78\",\"license\":\"UNLICENSED\"},\"contracts/PPSafeAgent.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\nimport \\\"./ISafe.sol\\\";\\nimport {IPPAgentV2JobOwner} from \\\"./IPPAgentV2.sol\\\";\\nimport {IPPAgentSafeModule} from \\\"./IPPSafeAgent.sol\\\";\\n\\npragma solidity ^0.8.9;\\n\\ncontract PPAgentSafeModule is IPPAgentSafeModule {\\n    /**\\n     * @dev Address of the PPAgent Contract\\n     */\\n    address private immutable AgentContract;\\n\\n    /**\\n     *\\n     * @param agentAddress Address of a PPAgent contract\\n     */\\n    constructor(address agentAddress) {\\n        AgentContract = agentAddress;\\n    }\\n\\n    /**\\n     *\\n     * @dev Only the PPAgent contract can execute transactions\\n     */\\n    modifier onlyAgent() {\\n        if (msg.sender != AgentContract) revert InvalidSender();\\n        _;\\n    }\\n\\n    /**\\n     *\\n     * @dev Only owned by a safe wallet jobs can be executed on the safe wallet\\n     */\\n    modifier onlyOnwedJob(address wallet) {\\n        bytes32 jobKey = _getJobKey();\\n        (address jobOwner, , , , , ) = IPPAgentV2JobOwner(AgentContract).getJob(\\n            jobKey\\n        );\\n        if (wallet != jobOwner) revert InvalidJobOwner();\\n        _;\\n    }\\n\\n    /**\\n     *\\n     * @param safe Address of a Safe smart contract\\n     * @param tx_ Transaction to be executed\\n     */\\n    function exec(\\n        address safe,\\n        Tx calldata tx_\\n    ) external onlyAgent onlyOnwedJob(safe) {\\n        (bool success, ) = ISafe(safe).execTransactionFromModuleReturnData(\\n            tx_.to,\\n            tx_.value,\\n            tx_.data,\\n            tx_.operation\\n        );\\n\\n        if (!success) revert ExecutionReverted();\\n    }\\n\\n    /**\\n     * @dev Returns last 32 bytes of calldata\\n     * @dev The last 32 bytes of the calldata is the jobKey\\n     */\\n    function _getJobKey() private pure returns (bytes32 jobKey) {\\n        assembly {\\n            jobKey := calldataload(sub(calldatasize(), 32))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x744110d4c306a070c86c85715b909f64f9da425438d092de2fca09978e6f0c5f\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610d76380380610d76833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b608051610c5a61011c60003960008181604e015260e20152610c5a6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c0bc1e3d14610030575b600080fd5b61004a60048036038101906100459190610390565b61004c565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100d1576040517fddb5de5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160006100dc6102ee565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f729cf0d836040518263ffffffff1660e01b81526004016101399190610405565b600060405180830381865afa158015610156573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061017f91906108a7565b505050505090508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146101eb576040517fe12233c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff16635229073f86600001602081019061021c919061096f565b876040013588806020019061023191906109ab565b8a60600160208101906102449190610a33565b6040518663ffffffff1660e01b8152600401610264959493929190610b42565b6000604051808303816000875af1158015610283573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102ac9190610bc8565b509050806102e6576040517ff21e646b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b60006020360335905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103398261030e565b9050919050565b6103498161032e565b811461035457600080fd5b50565b60008135905061036681610340565b92915050565b600080fd5b6000608082840312156103875761038661036c565b5b81905092915050565b600080604083850312156103a7576103a6610304565b5b60006103b585828601610357565b925050602083013567ffffffffffffffff8111156103d6576103d5610309565b5b6103e285828601610371565b9150509250929050565b6000819050919050565b6103ff816103ec565b82525050565b600060208201905061041a60008301846103f6565b92915050565b60008151905061042f81610340565b92915050565b6000819050919050565b61044881610435565b811461045357600080fd5b50565b6000815190506104658161043f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104b982610470565b810181811067ffffffffffffffff821117156104d8576104d7610481565b5b80604052505050565b60006104eb6102fa565b90506104f782826104b0565b919050565b600080fd5b600060ff82169050919050565b61051781610501565b811461052257600080fd5b50565b6000815190506105348161050e565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61056f8161053a565b811461057a57600080fd5b50565b60008151905061058c81610566565b92915050565b60006affffffffffffffffffffff82169050919050565b6105b281610592565b81146105bd57600080fd5b50565b6000815190506105cf816105a9565b92915050565b600061ffff82169050919050565b6105ec816105d5565b81146105f757600080fd5b50565b600081519050610609816105e3565b92915050565b600063ffffffff82169050919050565b6106288161060f565b811461063357600080fd5b50565b6000815190506106458161061f565b92915050565b600062ffffff82169050919050565b6106638161064b565b811461066e57600080fd5b50565b6000815190506106808161065a565b92915050565b6000610120828403121561069d5761069c61046b565b5b6106a86101206104e1565b905060006106b884828501610525565b60008301525060206106cc8482850161057d565b60208301525060406106e0848285016105c0565b60408301525060606106f4848285016105fa565b6060830152506080610708848285016105fa565b60808301525060a061071c84828501610636565b60a08301525060c061073084828501610525565b60c08301525060e061074484828501610671565b60e08301525061010061075984828501610636565b6101008301525092915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561078b5761078a610481565b5b61079482610470565b9050602081019050919050565b60005b838110156107bf5780820151818401526020810190506107a4565b60008484015250505050565b60006107de6107d984610770565b6104e1565b9050828152602081018484840111156107fa576107f961076b565b5b6108058482856107a1565b509392505050565b600082601f83011261082257610821610766565b5b81516108328482602086016107cb565b91505092915050565b6000604082840312156108515761085061046b565b5b61085b60406104e1565b9050600061086b84828501610420565b600083015250602082015167ffffffffffffffff81111561088f5761088e6104fc565b5b61089b8482850161080d565b60208301525092915050565b6000806000806000806101c087890312156108c5576108c4610304565b5b60006108d389828a01610420565b96505060206108e489828a01610420565b95505060406108f589828a01610456565b945050606061090689828a01610686565b93505061018087015167ffffffffffffffff81111561092857610927610309565b5b61093489828a0161080d565b9250506101a087015167ffffffffffffffff81111561095657610955610309565b5b61096289828a0161083b565b9150509295509295509295565b60006020828403121561098557610984610304565b5b600061099384828501610357565b91505092915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126109c8576109c761099c565b5b80840192508235915067ffffffffffffffff8211156109ea576109e96109a1565b5b602083019250600182023603831315610a0657610a056109a6565b5b509250929050565b60028110610a1b57600080fd5b50565b600081359050610a2d81610a0e565b92915050565b600060208284031215610a4957610a48610304565b5b6000610a5784828501610a1e565b91505092915050565b610a698161032e565b82525050565b610a7881610435565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000610aaa8385610a7e565b9350610ab7838584610a8f565b610ac083610470565b840190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610b0b57610b0a610acb565b5b50565b6000819050610b1c82610afa565b919050565b6000610b2c82610b0e565b9050919050565b610b3c81610b21565b82525050565b6000608082019050610b576000830188610a60565b610b646020830187610a6f565b8181036040830152610b77818587610a9e565b9050610b866060830184610b33565b9695505050505050565b60008115159050919050565b610ba581610b90565b8114610bb057600080fd5b50565b600081519050610bc281610b9c565b92915050565b60008060408385031215610bdf57610bde610304565b5b6000610bed85828601610bb3565b925050602083015167ffffffffffffffff811115610c0e57610c0d610309565b5b610c1a8582860161080d565b915050925092905056fea2646970667358221220c29b9466395111b4cde764012f1c31a2d05bc23d43e1b530214da45088e378e864736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c0bc1e3d14610030575b600080fd5b61004a60048036038101906100459190610390565b61004c565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100d1576040517fddb5de5e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160006100dc6102ee565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f729cf0d836040518263ffffffff1660e01b81526004016101399190610405565b600060405180830381865afa158015610156573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061017f91906108a7565b505050505090508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146101eb576040517fe12233c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008573ffffffffffffffffffffffffffffffffffffffff16635229073f86600001602081019061021c919061096f565b876040013588806020019061023191906109ab565b8a60600160208101906102449190610a33565b6040518663ffffffff1660e01b8152600401610264959493929190610b42565b6000604051808303816000875af1158015610283573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102ac9190610bc8565b509050806102e6576040517ff21e646b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b60006020360335905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103398261030e565b9050919050565b6103498161032e565b811461035457600080fd5b50565b60008135905061036681610340565b92915050565b600080fd5b6000608082840312156103875761038661036c565b5b81905092915050565b600080604083850312156103a7576103a6610304565b5b60006103b585828601610357565b925050602083013567ffffffffffffffff8111156103d6576103d5610309565b5b6103e285828601610371565b9150509250929050565b6000819050919050565b6103ff816103ec565b82525050565b600060208201905061041a60008301846103f6565b92915050565b60008151905061042f81610340565b92915050565b6000819050919050565b61044881610435565b811461045357600080fd5b50565b6000815190506104658161043f565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104b982610470565b810181811067ffffffffffffffff821117156104d8576104d7610481565b5b80604052505050565b60006104eb6102fa565b90506104f782826104b0565b919050565b600080fd5b600060ff82169050919050565b61051781610501565b811461052257600080fd5b50565b6000815190506105348161050e565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61056f8161053a565b811461057a57600080fd5b50565b60008151905061058c81610566565b92915050565b60006affffffffffffffffffffff82169050919050565b6105b281610592565b81146105bd57600080fd5b50565b6000815190506105cf816105a9565b92915050565b600061ffff82169050919050565b6105ec816105d5565b81146105f757600080fd5b50565b600081519050610609816105e3565b92915050565b600063ffffffff82169050919050565b6106288161060f565b811461063357600080fd5b50565b6000815190506106458161061f565b92915050565b600062ffffff82169050919050565b6106638161064b565b811461066e57600080fd5b50565b6000815190506106808161065a565b92915050565b6000610120828403121561069d5761069c61046b565b5b6106a86101206104e1565b905060006106b884828501610525565b60008301525060206106cc8482850161057d565b60208301525060406106e0848285016105c0565b60408301525060606106f4848285016105fa565b6060830152506080610708848285016105fa565b60808301525060a061071c84828501610636565b60a08301525060c061073084828501610525565b60c08301525060e061074484828501610671565b60e08301525061010061075984828501610636565b6101008301525092915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561078b5761078a610481565b5b61079482610470565b9050602081019050919050565b60005b838110156107bf5780820151818401526020810190506107a4565b60008484015250505050565b60006107de6107d984610770565b6104e1565b9050828152602081018484840111156107fa576107f961076b565b5b6108058482856107a1565b509392505050565b600082601f83011261082257610821610766565b5b81516108328482602086016107cb565b91505092915050565b6000604082840312156108515761085061046b565b5b61085b60406104e1565b9050600061086b84828501610420565b600083015250602082015167ffffffffffffffff81111561088f5761088e6104fc565b5b61089b8482850161080d565b60208301525092915050565b6000806000806000806101c087890312156108c5576108c4610304565b5b60006108d389828a01610420565b96505060206108e489828a01610420565b95505060406108f589828a01610456565b945050606061090689828a01610686565b93505061018087015167ffffffffffffffff81111561092857610927610309565b5b61093489828a0161080d565b9250506101a087015167ffffffffffffffff81111561095657610955610309565b5b61096289828a0161083b565b9150509295509295509295565b60006020828403121561098557610984610304565b5b600061099384828501610357565b91505092915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126109c8576109c761099c565b5b80840192508235915067ffffffffffffffff8211156109ea576109e96109a1565b5b602083019250600182023603831315610a0657610a056109a6565b5b509250929050565b60028110610a1b57600080fd5b50565b600081359050610a2d81610a0e565b92915050565b600060208284031215610a4957610a48610304565b5b6000610a5784828501610a1e565b91505092915050565b610a698161032e565b82525050565b610a7881610435565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000610aaa8385610a7e565b9350610ab7838584610a8f565b610ac083610470565b840190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610b0b57610b0a610acb565b5b50565b6000819050610b1c82610afa565b919050565b6000610b2c82610b0e565b9050919050565b610b3c81610b21565b82525050565b6000608082019050610b576000830188610a60565b610b646020830187610a6f565b8181036040830152610b77818587610a9e565b9050610b866060830184610b33565b9695505050505050565b60008115159050919050565b610ba581610b90565b8114610bb057600080fd5b50565b600081519050610bc281610b9c565b92915050565b60008060408385031215610bdf57610bde610304565b5b6000610bed85828601610bb3565b925050602083015167ffffffffffffffff811115610c0e57610c0d610309565b5b610c1a8582860161080d565b915050925092905056fea2646970667358221220c29b9466395111b4cde764012f1c31a2d05bc23d43e1b530214da45088e378e864736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "agentAddress": "Address of a PPAgent contract"
        }
      },
      "exec(address,(address,bytes,uint256,uint8))": {
        "params": {
          "safe": "Address of a Safe smart contract",
          "tx_": "Transaction to be executed"
        }
      }
    },
    "stateVariables": {
      "AgentContract": {
        "details": "Address of the PPAgent Contract"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}